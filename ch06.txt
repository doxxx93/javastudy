============================== [ 6장 객체자향 프로그래밍 ] ==============================


[1. 객체지향언어 ]

============================================================================================

[2. 클래스와 객체 ]

 # 2-1 클래스와 객체의 정의와 용도	
	* 클래스란? 객체의 설계도 / 틀 

	* 클래스의 용도? 객체를 생성하는데 사용된다

	* 프로그래밍에서 객체는 클래스에 정의된 내용대로 메모리에 생성된 것을 의미

	* 객체를 만들려면 클래스를 만드는것이 선행되어야 한다

 # 2-2 객체와 인스턴스	
	* 객체와 인스턴스는 같은 의미이지만 문맥에 따라 구별하여 사용한다
		// 클래스 ----------> 인스턴스(객체)
			 (인스턴스화)
	
	* 어떤 클래스로 부터 만들어진 객체를 그 클래스의 인스턴스 라고 한다

 # 2-3 객체의 구성요소 -속성과 기능
	* 일반적으로 객체는 다수의 속성과 다수의 기능을 갖는다. 
		// 객체는 속성과 기능의 집합이다

	* 객체 = 속성(변수) + 기능(메서드)
		// 각변수의 자료형은 속성의 값에 알맞은 것을 선택해야한다

 # 2-4 인스턴스의 생성과 사용
	* 인스턴스(객체)를 사용한다?
		// 클래스 작성 -> 인스턴스 생성 -> 객체 사용

	* 인스턴스 생성 - 클래스를 인스턴스화 한다
		// Tv t;
			- 메모리에 참조변수 t를 위한 공간이 생긴다.(빈 공간)
			- int num; 과 같은 맥락

		// t = new Tv();
			- [new Tv();] new연산자에 의해 Tv클래스의 인스턴스가 메모리의 빈공간에 생성된다
				-- 인스턴스가 메모리의 빈공간에 생성될때 멤벼변수의 값은 각 자료형의 기본값으로 초기화 된다.

			- [t = new Tv;] 대입연산자(=)에 의해 생성된 객체의 주소값이 참조변수 t에 저장된다
				-- 참조변수 t가 Tv인스턴스를 '가리키고 있다', '참조하고 있다'
				-- 참조변수는 인스턴스의 주소를 저장하고 있다

		// 같은 클래스 형식의 두 인스턴스가 있다고 할 때 tv1 = new Tv(); || tv2 = new Tv();
		   두개의 참조변수는 다른 인스턴스를 참조한다
			- System.out.println((tv1==tv2)? "true" : "false"); // false
				-- 참조타입은 주소를 저장하기 때문에 다른주소를 가지고있으면 false
			
			- 만약 tv2의 값을 tv1에 대입한다면? tv1 = tv2;
			  System.out.println((tv1==tv2)? "true" : "false"); // true
				-- 참조하는 주소가 같아졌기 때문에 true
				※다수의 참조변수가 하나의 인스턴스를 참조하는것은 가능※ 


	* 인스턴스는 참조변수를 통해서만 다룰 수 있으며, 참조변수의 타입은 인스턴스의 타입과 일치해야 한다.
		// 상속, 인터페이스 제외

		// ex) Tv t = new Radio(); X

 # 2-5 객체 배열
	* 객체 배열 == 참조변수 배열

	* 많은 수의 객체를 다뤄야할 때 사용

	* 객체 배열 안에 객체가 저장되는것이 아니고 객체의 주소가 저장된다.(참조변수들을 하나로 묶은 참조변수 배열)
		// Tv[] tvArr = new Tv[3]; 
			- 길이가 3인 Tv타입의 참조 변수 배열을 만든다
			- 참조변수 배열은 값을 넣지 않으면 기본값인 null로 초기화된다

		// tvArr[0] = new Tv(); 
			- 0번째에 tv타입 인스턴스를 저장(인스턴스의 주소가 0번째 배열에 저장된다)

		// Tv[] tvArr2 = { new Tv(), new Tv(), new Tv() };
			- 초기화블럭을 사용하여 각 배열에 객체를 대입하는 방법

 # 2-6 클래스의 또 다른 정의 ( 프로그래밍적인 관점에서 클래스의 정의와 의미)
	1. 클래스 : 데이터와 함수의 결합
		// 서로 관련된 변수들을 정의하고 이들에 대한 작업을 수행하는 함수들을 함께 정의해 놓은것

	2. 클래스 : 사용자정의 타입(user-defined type)
		// 사용자 정의 타입이란? : 프로그래밍언어에서 제공하는 자료형외에 프로그래머가 서로 관련된 변수들을 묶어서 하나의
				     타입으로 새로 추가하는 것
		// 자바와 같은 객체지향언어에서는 클래스가 곧 사용자 정의 타입이다.
		
		// 기본형의 갯수가 8개로 정해져있지만 참조형의 갯수가 정해져있지 않은 이유는 프로그래머가 새로운 타입을 추가할 수 있기 때문
		
		// 객체지향언어에서는 제어자와 메서드를 이용해서 조건에 맞는 코드를 쉽게 반영할 수 있다
	
=======================================================================================================

[3. 변수와 메서드 ]

		
수정 확인?
		
	
		